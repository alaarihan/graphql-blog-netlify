generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["nApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ROOT
  ADMIN
  USER
  BLOCKED
  UNVERIFIED
  UNAUTHORIZED
}

enum PermissionType {
  READ
  CREATE
  UPDATE
  DELETE
}

model Permission {
  id     Int            @id @default(autoincrement())
  active Boolean        @default(true)
  role   UserRole
  type   PermissionType
  model  String         @db.VarChar(100)
  def    Json?

  @@unique([role, type, model])
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique @db.VarChar(100)
  firstName         String?   @db.VarChar(100)
  lastName          String?   @db.VarChar(100)
  password          String
  role              UserRole  @default(UNVERIFIED)
  verificationToken String?
  country           String?   @db.VarChar(150)
  dateOfBirth       DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  posts             Post[]
}

model Post {
  id         Int         @id @default(autoincrement())
  authorId   Int
  title      String      @db.VarChar(255)
  slug       String      @db.VarChar(255)
  content    String?
  status     PostStatus  @default(DRAFT)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  author     User        @relation(fields: [authorId], references: [id])
  categories Category[]
  images     PostImage[]
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(200)
  parentId  Int?
  parent    Category?  @relation(name: "CategoryTree", fields: [parentId], references: [id])
  children  Category[] @relation(name: "CategoryTree")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  posts     Post[]
}

model File {
  id        Int         @id @default(autoincrement())
  name      String
  bucket    String
  mimeType  String
  path      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  meta      Json?
  tags      String[]
  PostImage PostImage[]

  @@unique([bucket, path])
}

model PostImage {
  id       Int     @id @default(autoincrement())
  image    File    @relation(fields: [fileId], references: [id])
  post     Post    @relation(fields: [postId], references: [id])
  order    Int     @default(0)
  featured Boolean @default(false)

  fileId Int
  postId Int
  @@unique([fileId, postId])
}

enum PostStatus {
  DRAFT
  PRIVATE
  PUBLISH
}

model FeedSource {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(200)
  url       String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
